{"version":3,"sources":["modules/topMenu.ts","components/TopMenu.tsx","containers/TopMenuContainer.tsx","modules/itemList.ts","components/Item.tsx","components/ItemList.tsx","modules/cart.ts","containers/ItemListContainer.tsx","components/Footer.tsx","components/CartItem.tsx","components/Cart.tsx","containers/CartContainer.tsx","pages/MainPage.tsx","modules/option.ts","components/Option.tsx","components/OptionList.tsx","containers/OptionListContainer.tsx","components/AddedList.tsx","containers/AddedListContainer.tsx","pages/OptionPage.tsx","components/MessageBox.tsx","utils/util.ts","App.tsx","reportWebVitals.ts","modules/index.ts","index.tsx"],"names":["SET_CATEGORY_LIST","SELECT_CATEGORY","SET_SELECTED_ITEM","DEL_SELECTED_ITEM","CLEAR_SELECTED_ITEM","setSelectedItem","id","type","payload","initialState","cateList","selectedId","topMenu","state","action","slice","newList","filter","cate","categoryItems","map","item","itemId","selected","caetList","TopMenu","onSelect","divRef","useRef","onClick","e","stopPropagation","currentTarget","dataset","className","ref","i","categoryId","href","categoryName","TopMenuContainer","useSelector","dispatch","useDispatch","selectCategory","CHECK_OPTION","UNCHECK_OPTION","UNCHECK_OPTION_ALL","selectedItem","itemList","itemOptions","opt","optionId","check","Number","Item","itemInfo","onItemClick","ctx","useContext","pageContext","itemSoldOutFlag","toggleMessage","src","itemImageUrl","itemName","itemPrice","toLocaleString","ItemList","useEffect","current","onscroll","titles","querySelectorAll","top","scrollTop","scrollH","scrollHeight","offsetHeight","document","querySelector","classList","remove","a","add","length","tit","offsetTop","SET_SHOW_CART","ADD_ITEM","DEL_ITEM","ADD_ITEM_AMOUNT","DEL_ITEM_AMOUNT","CLEAR_CART_ITEMS","addItem","show","cartItemList","cart","concat","c","amount","ItemListContainer","getSelectedItem","param","selectItem","togglePage","cartItem","optionList","Footer","onClickCart","size","color","CartItem","onDeleteItem","onAddDelClick","useState","totalPrice","setTotalPrice","onImgeClick","name","sum","reduce","acc","now","optionPrice","sumPrice","optionName","Cart","onClose","onOrder","totalSum","setTotalSum","totSum","itemPriceArr","forEach","push","sumTotalPrice","CartContainer","deleteSelectedItem","deleteItem","addItemAmount","deleteItemAmount","MainPage","showCart","setShowCart","pageShrink","shrink","itemListBox","toggle","CLEAR_ADDED_OPTIONS","ADD_OPTION","DEL_OPTION","clearAddedOptions","addedOptionList","option","Option","onClickOption","optId","OptionList","OptionListContainer","uncheckOption","deleteOption","tmpOpt","checkOption","AddedList","onPutItem","price","setPrice","style","AddedListContainer","options","OptionPage","MessageBox","msg","setTimeout","UT","request","api","fetch","result","status","Error","json","console","error","createContext","App","showMain","setShowMain","msgInfo","setMsgInfo","getCategoryList","list","categories","Provider","value","page","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4eae725f.chunk.js","sourcesContent":["import {categoryType} from '../utils/interfaces';\r\n\r\n// 액션 종류\r\nconst SET_CATEGORY_LIST = 'topMenu/SET_CATEGORY_LIST' as const;\r\nconst SELECT_CATEGORY = 'topMenu/SELECT_CATEGORY' as const;\r\nconst SET_SELECTED_ITEM = 'topMenu/SET_SELECTED_ITEM' as const;\r\nconst DEL_SELECTED_ITEM = 'topMenu/DEL_SELECTED_ITEM' as const;\r\nconst CLEAR_SELECTED_ITEM = 'topMenu/CLEAR_SELECTED_ITEM' as const;\r\n\r\n\r\n// 액션 생성함수\r\nexport const setCategoryList = (list: categoryType[])=> ({ \r\n    type : SET_CATEGORY_LIST,\r\n    payload : list\r\n});\r\nexport const selectCategory = (id: string)=> ({ \r\n    type : SELECT_CATEGORY,\r\n    payload : id\r\n});\r\nexport const setSelectedItem = (id: string)=> ({ \r\n    type : SET_SELECTED_ITEM,\r\n    payload : id\r\n});\r\nexport const deleteSelectedItem = (id: string)=> ({ \r\n    type : DEL_SELECTED_ITEM,\r\n    payload : id\r\n});\r\nexport const clearSelectedItem = ()=> ({ \r\n    type : CLEAR_SELECTED_ITEM\r\n});\r\n\r\n\r\n\r\n// 액션의 타입\r\ntype actionType = \r\n    | ReturnType<typeof setCategoryList>\r\n    | ReturnType<typeof selectCategory>\r\n    | ReturnType<typeof setSelectedItem>\r\n    | ReturnType<typeof deleteSelectedItem>\r\n    | ReturnType<typeof clearSelectedItem>;\r\n\r\n\r\n// 초기상태 타입\r\ntype stateType = {\r\n    cateList: categoryType[];\r\n    selectedId : string;\r\n}\r\n\r\n// 초기상태 선언\r\nconst initialState: stateType = {\r\n    cateList : [],\r\n    selectedId : ''\r\n};\r\n\r\n// 리듀서\r\nfunction topMenu(state: stateType = initialState, action: actionType) {\r\n    switch (action.type) {\r\n        case SET_CATEGORY_LIST:\r\n            return {\r\n                ...state,\r\n                cateList : action.payload.slice()\r\n            };\r\n        case SELECT_CATEGORY:\r\n            return {\r\n                ...state,\r\n                selectedId : action.payload\r\n            };\r\n        case SET_SELECTED_ITEM:\r\n            var id = action.payload;\r\n            var newList = state.cateList.filter(cate => cate.categoryItems.map(item => {\r\n                if(item.itemId === id) return item.selected = true;\r\n                else return item;\r\n            }));\r\n            return {\r\n                ...state,\r\n                cateList : newList\r\n            };\r\n        case DEL_SELECTED_ITEM:\r\n            var id = action.payload;\r\n            var newList = state.cateList.filter(cate => cate.categoryItems.filter(item => {\r\n                if(item.itemId === id) return item.selected = false;\r\n                else return item;\r\n            }));\r\n            return {\r\n                ...state,\r\n                cateList : newList\r\n            };\r\n        case CLEAR_SELECTED_ITEM:\r\n            return {\r\n                ...state,\r\n                caetList : state.cateList.filter(cate => cate.categoryItems.map(item => {\r\n                    item.selected = false;\r\n                    return item;\r\n                }))\r\n            };\r\n        default:\r\n            return state;\r\n  }\r\n}\r\n\r\nexport default topMenu;","import { CallTracker } from 'assert';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport {categoryType} from '../utils/interfaces';\r\n\r\ninterface Props {\r\n    cateList: categoryType[];\r\n    selectedId: string;\r\n    onSelect: (s: string)=> void;\r\n}\r\n\r\nfunction TopMenu({cateList, selectedId, onSelect}: Props) {\r\n    const divRef = useRef<HTMLDivElement | null>(null);\r\n\r\n    const onClick = (e: React.MouseEvent<HTMLAnchorElement>)=>{\r\n        e.stopPropagation();\r\n        onSelect(e.currentTarget.dataset.id!);\r\n    }\r\n\r\n    return (\r\n        <div className=\"topmenu-box\">\r\n            <div className='topmenu-cate-list' ref={divRef}> \r\n                {cateList!.map((cate, i) => \r\n                    (<a \r\n                        key={cate.categoryId} \r\n                        className={i === 0 ? 'active' : ''}\r\n                        data-id={`cate_${cate.categoryId}`} \r\n                        onClick={onClick}\r\n                        href={`#cate_${cate.categoryId}`}>\r\n                        {cate.categoryName}\r\n                    </a>)\r\n                )}\r\n            </div>\r\n            <div className='topmenu-table-info'>\r\n                <div className='table'>\r\n                    <div>주문전화 02-123-4567</div>\r\n                    <div>냠냠피자</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TopMenu;\r\n","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { RootState } from '../modules/index';\r\nimport { selectCategory } from '../modules/topMenu';\r\nimport TopMenu from '../components/TopMenu';\r\n\r\n\r\nfunction TopMenuContainer() {\r\n    const {cateList, selectedId} = useSelector((state: RootState) => state.topMenu);\r\n    const dispatch = useDispatch();\r\n\r\n    const onSelect = (id: string)=>{\r\n        dispatch(selectCategory(id));\r\n    }\r\n\r\n    return (\r\n        <TopMenu cateList={cateList} selectedId={selectedId} onSelect={onSelect}></TopMenu>\r\n    );\r\n}\r\n\r\nexport default TopMenuContainer;\r\n","import {categoryItemType} from '../utils/interfaces';\r\n\r\n// 액션 종류\r\nconst SET_SELECTED_ITEM = 'itemList/SET_SELECTED_ITEM' as const;\r\nconst CHECK_OPTION = 'itemList/CHECK_OPTION' as const;\r\nconst UNCHECK_OPTION = 'itemList/UNCHECK_OPTION' as const;\r\nconst UNCHECK_OPTION_ALL = 'itemList/CHECK_OPTION_ALL' as const;\r\n\r\n\r\n// 액션 생성함수\r\nexport const setSelectedItem = (item: categoryItemType)=> ({ \r\n    type : SET_SELECTED_ITEM,\r\n    payload : item\r\n});\r\nexport const checkOption = (optId: string)=> ({ \r\n    type : CHECK_OPTION,\r\n    payload: optId\r\n});\r\nexport const uncheckOption = (optId: string)=> ({ \r\n    type : UNCHECK_OPTION,\r\n    payload: optId\r\n});\r\nexport const uncheckOptionAll = ()=> ({ \r\n    type : UNCHECK_OPTION_ALL\r\n});\r\n\r\n\r\n// 액션의 타입\r\ntype actionType = \r\n    | ReturnType<typeof setSelectedItem>\r\n    | ReturnType<typeof checkOption>\r\n    | ReturnType<typeof uncheckOption>\r\n    | ReturnType<typeof uncheckOptionAll>;\r\n\r\n    \r\n\r\n// 초기상태 타입\r\ntype stateType = {\r\n    selectedItem: categoryItemType | null;\r\n}\r\n\r\n// 초기상태\r\nconst initialState: stateType = {\r\n    selectedItem : null\r\n};\r\n\r\n// 리듀서\r\nfunction itemList(state: stateType = initialState, action: actionType) {\r\n    switch (action.type) {\r\n        case SET_SELECTED_ITEM:\r\n            return {\r\n                selectedItem : action.payload ? {...action.payload} : null\r\n            };\r\n        case CHECK_OPTION:\r\n            return {\r\n                selectedItem : state.selectedItem ? {\r\n                    ...state.selectedItem,\r\n                    itemOptions : state.selectedItem.itemOptions.map((opt, i) => {\r\n                        if(opt.optionId === action.payload){\r\n                            opt.check = true;\r\n                        }else if(Number(opt.optionId) === 0){\r\n                            opt.check = false;\r\n                        }\r\n                        \r\n                        return opt;\r\n                    })\r\n                } : null\r\n            };\r\n        case UNCHECK_OPTION:\r\n            return {\r\n                selectedItem : state.selectedItem ? {\r\n                    ...state.selectedItem,\r\n                    itemOptions : state.selectedItem.itemOptions.map(opt => {\r\n                        if(opt.optionId === action.payload){\r\n                            opt.check = false;\r\n                        }\r\n                        return opt;\r\n                    })\r\n                } : null\r\n            }\r\n        case UNCHECK_OPTION_ALL:\r\n            return {\r\n                selectedItem : state.selectedItem ? {\r\n                    ...state.selectedItem,\r\n                    itemOptions : state.selectedItem.itemOptions.map((opt, i) => {\r\n                        opt.check = i === 0 ? true : false;\r\n                        return opt;\r\n                    })\r\n                } : null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default itemList;","import React, { useContext } from 'react';\r\nimport { pageContext } from '../App';\r\nimport {categoryItemType} from '../utils/interfaces';\r\n\r\ninterface paramType {\r\n    itemId: string;\r\n    categoryId: string;\r\n}\r\n\r\ninterface Props {\r\n    itemInfo: categoryItemType;\r\n    categoryId: string;\r\n    onItemClick: (param: paramType)=>void;\r\n}\r\n\r\nfunction Item({itemInfo, categoryId, onItemClick}: Props){\r\n    const ctx = useContext(pageContext);\r\n    \r\n    const onClick = ()=>{\r\n        if(itemInfo.itemSoldOutFlag){\r\n            ctx!.toggleMessage('품절된 상품입니다.');\r\n        }else if(itemInfo.selected){\r\n            ctx!.toggleMessage('이미 추가된 상품입니다.');\r\n        }else{\r\n            onItemClick({\r\n                itemId : itemInfo.itemId!, \r\n                categoryId \r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='item-box' onClick={onClick}>\r\n            <div className='imgbox'>\r\n                <img className={`pic ${itemInfo.itemSoldOutFlag || itemInfo.selected ? 'dark' : ''}`} src={itemInfo.itemImageUrl}></img>\r\n                {itemInfo.itemSoldOutFlag ? <div className='soldout'>품절</div> : null}\r\n                {itemInfo.selected ? <div className='added'>추가완료</div> : null}\r\n            </div>\r\n            <div className='info'>\r\n                <div>{itemInfo.itemName}</div>\r\n                <div>{itemInfo.itemPrice.toLocaleString()}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Item;","import React, {useEffect, useRef} from 'react';\r\nimport {categoryType} from '../utils/interfaces';\r\nimport Item from './Item';\r\n\r\ninterface paramType {\r\n    itemId: string;\r\n    categoryId: string;\r\n}\r\n\r\ninterface Props {\r\n    cateList: categoryType[];\r\n    onItemClick: (param: paramType)=>void;\r\n}\r\n\r\nfunction ItemList({cateList, onItemClick}: Props){\r\n    const divRef = useRef<HTMLDivElement | null>(null);\r\n\r\n    useEffect(()=>{\r\n        // Scrollspy 처리\r\n        divRef.current!.onscroll = ()=>{\r\n            const titles: NodeListOf<HTMLDivElement> = divRef.current!.querySelectorAll('div.title[id]');\r\n            const top = divRef.current!.scrollTop;\r\n            const scrollH = divRef.current!.scrollHeight;\r\n            const divH = divRef.current!.offsetHeight;\r\n\r\n            if(top + divH + 30 >= scrollH){\r\n                document.querySelector('.topmenu-cate-list a.active')?.classList.remove('active');\r\n                const a = document.querySelector(`.topmenu-cate-list a[data-id]:last-child`);\r\n                a?.classList.add('active');\r\n            }else{\r\n                for (let i = 0; i < titles.length; i++) {\r\n                    const tit = titles[i];\r\n    \r\n                    if(tit.offsetTop - 200 <= top) {\r\n                        document.querySelector('.topmenu-cate-list a.active')?.classList.remove('active');\r\n                        const a = document.querySelector(`.topmenu-cate-list a[data-id=${tit.id}]`);\r\n                        a?.classList.add('active');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div id='itemListBox' className='itemList-box' ref={divRef}>\r\n            <div className='wrapper'>\r\n            {cateList.map(cate => \r\n                <div key={cate.categoryId}>\r\n                    <div className='title' id={`cate_${cate.categoryId}`}>\r\n                        {cate.categoryName}\r\n                    </div>\r\n                    <section>\r\n                        {cate.categoryItems.map(item => \r\n                            (<Item key={item.itemId} itemInfo={item} categoryId={cate.categoryId} onItemClick={onItemClick}></Item>)\r\n                        )}\r\n                    </section>\r\n                </div>\r\n            )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ItemList;","import {cartItemType} from '../utils/interfaces';\r\n\r\n// 액션 종류\r\nconst SET_SHOW_CART = 'cart/SET_SHOW_CART' as const;\r\nconst ADD_ITEM = 'cart/ADD_ITEM' as const;\r\nconst DEL_ITEM = 'cart/DEL_ITEM' as const;\r\nconst ADD_ITEM_AMOUNT = 'cart/ADD_ITEM_AMOUNT' as const;\r\nconst DEL_ITEM_AMOUNT = 'cart/DEL_ITEM_AMOUNT' as const;\r\nconst CLEAR_CART_ITEMS = 'cart/CLEAR_CART_ITEMS' as const;\r\n\r\n\r\n// 액션 생성함수\r\nexport const setShowCart = (show: boolean)=> ({ \r\n    type : SET_SHOW_CART,\r\n    payload : show\r\n});\r\nexport const addItem = (item: cartItemType)=> ({ \r\n    type : ADD_ITEM,\r\n    payload : item\r\n});\r\nexport const deleteItem = (id: string)=> ({ \r\n    type : DEL_ITEM,\r\n    payload : id\r\n});\r\nexport const addItemAmount = (id: string)=> ({ \r\n    type : ADD_ITEM_AMOUNT,\r\n    payload : id\r\n});\r\nexport const deleteItemAmount = (id: string)=> ({ \r\n    type : DEL_ITEM_AMOUNT,\r\n    payload : id\r\n});\r\nexport const clearCartItems = ()=> ({ \r\n    type : CLEAR_CART_ITEMS\r\n});\r\n\r\n\r\n// 액션함수 타입\r\ntype actionType = \r\n    | ReturnType<typeof setShowCart>\r\n    | ReturnType<typeof addItem>\r\n    | ReturnType<typeof deleteItem>\r\n    | ReturnType<typeof addItemAmount>\r\n    | ReturnType<typeof deleteItemAmount>\r\n    | ReturnType<typeof clearCartItems>;\r\n\r\n\r\n// 초기상태 타입\r\ntype stateType = {\r\n    show: boolean;\r\n    cartItemList: cartItemType[]\r\n}\r\n\r\n\r\n// 초기상태\r\nconst initialState: stateType = {\r\n    show : false,\r\n    cartItemList : []\r\n};\r\n\r\n\r\n// 리듀서\r\nfunction cart(state: stateType = initialState, action: actionType) {\r\n    switch (action.type) {\r\n        case SET_SHOW_CART:\r\n            return {\r\n                ...state,\r\n                show : action.payload\r\n            };\r\n        case ADD_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItemList : state.cartItemList.concat(action.payload)\r\n            };\r\n        case DEL_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItemList : state.cartItemList.filter(c => c.itemId !== action.payload)\r\n            };\r\n        case ADD_ITEM_AMOUNT:\r\n            return {\r\n                ...state,\r\n                cartItemList : state.cartItemList.map(c => {\r\n                    if(c.itemId === action.payload) c.amount++;\r\n                    return {...c};\r\n                })\r\n            };\r\n        case DEL_ITEM_AMOUNT:\r\n            return {\r\n                ...state,\r\n                cartItemList : state.cartItemList.map(c => {\r\n                    if(c.itemId === action.payload) c.amount--;\r\n                    return {...c};\r\n                })\r\n            };\r\n        case CLEAR_CART_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItemList : []\r\n            };\r\n        default:\r\n            return state;\r\n  }\r\n}\r\n\r\nexport default cart;","import React , {useContext} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { RootState } from '../modules/index';\r\nimport { setSelectedItem as selectItem } from '../modules/itemList';\r\nimport { setSelectedItem } from '../modules/topMenu';\r\nimport ItemList from '../components/ItemList';\r\nimport { addItem } from '../modules/cart';\r\nimport {pageContext} from '../App';\r\n\r\ninterface paramType {\r\n    itemId: string;\r\n    categoryId: string;\r\n}\r\n\r\nfunction ItemListContainer() {\r\n    const ctx = useContext(pageContext);\r\n    const {cateList} = useSelector((state: RootState) => state.topMenu);\r\n    const dispatch = useDispatch();\r\n\r\n    const onItemClick = (param: paramType)=>{\r\n        // 상품탐색\r\n        const item = getSelectedItem(param);\r\n\r\n        if(item.itemOptions.length > 0){\r\n            dispatch(selectItem(item));\r\n            // 옵션리스트 화면 show \r\n            ctx!.togglePage('option');\r\n        }else{\r\n            const cartItem = {\r\n                itemId : item.itemId,\r\n                itemName : item.itemName,\r\n                itemPrice : item.itemPrice,\r\n                optionList : [],\r\n                amount : 1\r\n            }\r\n            dispatch(setSelectedItem(item.itemId));\r\n            dispatch(addItem(cartItem));\r\n            ctx?.toggleMessage('상품이 장바구니에 추가되었습니다.');\r\n        }\r\n\r\n    }\r\n\r\n    const getSelectedItem = ({itemId, categoryId}: paramType)=>{\r\n        const cate = cateList.filter(c => Number(c.categoryId) === Number(categoryId));\r\n        const item = cate[0].categoryItems.filter(c => Number(c.itemId) === Number(itemId))[0];\r\n\r\n        return  {\r\n            ...item,\r\n            itemOptions : item.itemOptions.map((opt, i) => {\r\n                opt.check = i === 0;\r\n                return opt;\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <ItemList cateList={cateList} onItemClick={onItemClick}></ItemList>\r\n    );\r\n}\r\n\r\nexport default ItemListContainer;\r\n","import React from 'react';\r\nimport {FiShoppingBag} from 'react-icons/fi';\r\n\r\ninterface Props {\r\n    onClickCart: ()=> void;\r\n}\r\n\r\nfunction Footer({onClickCart}: Props){\r\n    const onClick = ()=>{\r\n        onClickCart();\r\n    }\r\n\r\n    return (\r\n        <div className='footer-box'>\r\n            <div className='wrapper' onClick={onClick}>\r\n                <FiShoppingBag size='25' color='white'></FiShoppingBag>\r\n                <div>장바구니</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useEffect, useState } from 'react';\r\nimport { FaMinusSquare, FaPlusSquare } from 'react-icons/fa';\r\nimport {cartItemType} from '../utils/interfaces';\r\n\r\ninterface paramType {\r\n    id: string;\r\n    type: string;\r\n}\r\n\r\ninterface Props {\r\n    item: cartItemType;\r\n    onDeleteItem: (id: string)=>void;\r\n    onAddDelClick: (param: paramType)=>void;\r\n}\r\n\r\nfunction CartItem({item, onDeleteItem, onAddDelClick}: Props){\r\n    const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n    const onClickDel = ()=>{\r\n        onDeleteItem(item.itemId);\r\n    }\r\n    \r\n    const onImgeClick = (e: React.MouseEvent<SVGAElement>)=>{\r\n        const type = e.currentTarget.dataset.name!\r\n        if(type === 'del' && item.amount === 1) return;\r\n\r\n        onAddDelClick({\r\n            id : item.itemId,\r\n            type\r\n        });\r\n    } \r\n\r\n    const sumPrice = ()=>{\r\n        let sum = (item.itemPrice + item.optionList.reduce((acc, now) => acc + now.optionPrice, 0)) * item.amount;  \r\n        setTotalPrice(sum);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // 기본값 + 옵션값 계산\r\n        sumPrice();\r\n    }, [item]);\r\n\r\n    return (\r\n        <div className='cartItem-box'>\r\n            <div className='header'>\r\n                <div className='name'>{item.itemName}</div>\r\n                <div className='del' onClick={onClickDel}>삭제</div>\r\n            </div>\r\n            <div className='opts'>\r\n                <div className='txt-box'>\r\n                    <div className='txt'>기본</div>\r\n                    <div className='txt'>1개</div>\r\n                    <div className='txt'>{item.itemPrice.toLocaleString()}원</div>\r\n                </div>\r\n                {item.optionList.map(opt => \r\n                    (<div key={opt.optionId} className='added txt-box'>\r\n                        <div className='txt'>{opt.optionName}</div>\r\n                        <div className='txt'>1개</div>\r\n                        <div className='txt'>{opt.optionPrice.toLocaleString()}원</div>\r\n                    </div>)\r\n                )}\r\n            </div>\r\n            <div className='amount'>\r\n                <div className='amt'>\r\n                    <FaPlusSquare size='25' data-name='add' onClick={onImgeClick}></FaPlusSquare>\r\n                    <div>{item.amount}개</div>\r\n                    <FaMinusSquare size='25' data-name='del' onClick={onImgeClick}></FaMinusSquare>\r\n                </div>\r\n                <div className='price'>{totalPrice.toLocaleString()}원</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CartItem;","import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { pageContext } from '../App';\r\nimport {cartItemType} from '../utils/interfaces';\r\nimport CartItem from './CartItem';\r\n\r\ninterface paramType {\r\n    id: string;\r\n    type: string;\r\n}\r\n\r\ninterface Props {\r\n    onClose: ()=>void;\r\n    cartItemList: cartItemType[];\r\n    onOrder: ()=>void;\r\n    onDeleteItem: (id: string)=>void;\r\n    onAddDelClick: (param: paramType)=>void;\r\n}\r\n\r\nfunction Cart({onClose, cartItemList, onOrder, onDeleteItem, onAddDelClick}: Props){\r\n    const ctx = useContext(pageContext);\r\n    const divRef = useRef<HTMLDivElement | null>(null);\r\n    const [totalSum, setTotalSum] = useState(0);\r\n\r\n    const onClickOrder = ()=>{\r\n        if(cartItemList.length === 0) ctx?.toggleMessage('주문할 상품이 없습니다.'); \r\n        else onOrder();\r\n    }\r\n\r\n    const sumTotalPrice = ()=>{\r\n        let totSum = 0;\r\n        const itemPriceArr: number[] = [];\r\n        cartItemList.forEach(item => {\r\n            let sum = (item.itemPrice + item.optionList.reduce((acc, now) => acc + now.optionPrice, 0)) * item.amount;  \r\n            itemPriceArr.push(sum);\r\n        });\r\n        totSum = itemPriceArr.reduce((acc, now) => acc + now, 0);\r\n        setTotalSum(totSum);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // 총 합계 계산\r\n        sumTotalPrice();\r\n    }, [cartItemList]);\r\n\r\n    useEffect(()=>{\r\n        divRef.current!.classList.add('show');\r\n    }, []);\r\n\r\n    return (\r\n        <div className='cart-box' ref={divRef}>\r\n            <div className='title'>장바구니</div>\r\n            <div className='item-wrapper'>\r\n                {cartItemList.map(item => \r\n                    <CartItem key={item.itemId} item={item} onDeleteItem={onDeleteItem} onAddDelClick={onAddDelClick}></CartItem>\r\n                )}\r\n            </div>\r\n            <div className='cart-footer'>\r\n                <div className='total-box'>\r\n                    <div>총 {cartItemList.length}가지</div>\r\n                    <div className='price'>합계 <span>{totalSum.toLocaleString()}원</span></div>\r\n                </div>\r\n                <div className='button-box'>\r\n                    <div onClick={()=>{onClose()}}>닫기</div>\r\n                    <div onClick={onClickOrder}>주문하기</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cart;","import React, { useContext } from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { RootState } from '../modules/index';\r\nimport { clearCartItems, deleteItem, addItemAmount, deleteItemAmount } from '../modules/cart';\r\nimport { clearSelectedItem } from '../modules/topMenu';\r\nimport { deleteSelectedItem } from '../modules/topMenu';\r\nimport Cart from '../components/Cart';\r\nimport { pageContext } from '../App';\r\n\r\ninterface paramType {\r\n    id: string;\r\n    type: string;\r\n}\r\n\r\ninterface Props {\r\n    onClose: ()=>void;\r\n}\r\n\r\nfunction CartContainer({onClose}: Props) {\r\n    const ctx = useContext(pageContext);\r\n    const {cartItemList} = useSelector((state: RootState) => state.cart);\r\n    const dispatch = useDispatch();\r\n\r\n    const onOrder = ()=>{\r\n        dispatch(clearSelectedItem());\r\n        dispatch(clearCartItems());\r\n        ctx!.toggleMessage('주문이 완료되었습니다.');\r\n        onClose();\r\n    }\r\n\r\n    const onDeleteItem = (id: string)=>{\r\n        dispatch(deleteSelectedItem(id));\r\n        dispatch(deleteItem(id));\r\n    }\r\n    \r\n    const onAddDelClick = ({id, type}: paramType)=>{\r\n        if(type === 'add') dispatch(addItemAmount(id));\r\n        else dispatch(deleteItemAmount(id));\r\n    }\r\n\r\n    return (\r\n        <Cart \r\n            onClose={onClose} \r\n            cartItemList={cartItemList} \r\n            onOrder={onOrder}\r\n            onDeleteItem={onDeleteItem}\r\n            onAddDelClick={onAddDelClick}\r\n        ></Cart>\r\n    );\r\n}\r\n\r\nexport default CartContainer;\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport TopMenuContainer from '../containers/TopMenuContainer';\r\nimport ItemListContainer from '../containers/ItemListContainer';\r\nimport Footer from '../components/Footer';\r\nimport CartContainer from '../containers/CartContainer';\r\n\r\nfunction MainPage() {\r\n    const [showCart, setShowCart] = useState(false);\r\n\r\n    const onClickCart = ()=>{\r\n        pageShrink(true);\r\n    }\r\n    const onCloseCart = ()=>{\r\n        pageShrink(false);\r\n    }\r\n\r\n    const pageShrink = (shrink: boolean)=>{\r\n        const itemListBox = document.querySelector('#itemListBox');\r\n        itemListBox?.classList.toggle('shrink');\r\n        setShowCart(shrink);\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-page\">\r\n            <TopMenuContainer></TopMenuContainer>\r\n            <ItemListContainer></ItemListContainer>\r\n            <Footer onClickCart={onClickCart}></Footer>\r\n            {showCart ? <CartContainer onClose={onCloseCart}></CartContainer> : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainPage;\r\n","import {optionType} from '../utils/interfaces';\r\n\r\n// 액션 종류\r\nconst CLEAR_ADDED_OPTIONS = 'option/CLEAR_ADDED_OPTIONS' as const;\r\nconst ADD_OPTION = 'option/ADD_OPTION' as const;\r\nconst DEL_OPTION = 'option/DEL_OPTION' as const;\r\n\r\n\r\n// 액션 생성함수\r\nexport const clearAddedOptions = ()=> ({ \r\n    type : CLEAR_ADDED_OPTIONS\r\n});\r\nexport const addOption = (opt: optionType)=> ({ \r\n    type : ADD_OPTION,\r\n    payload : opt\r\n});\r\nexport const deleteOption = (optId: string)=> ({ \r\n    type : DEL_OPTION,\r\n    payload : optId\r\n});\r\n\r\n\r\n// 액션 타입\r\ntype actionType = \r\n    | ReturnType<typeof clearAddedOptions>\r\n    | ReturnType<typeof addOption>\r\n    | ReturnType<typeof deleteOption>;\r\n\r\n\r\n// 초기상태 타입\r\ntype stateType = {\r\n    addedOptionList: optionType[];\r\n}\r\n\r\n// 초기상태\r\nconst initialState: stateType = {\r\n    addedOptionList : []\r\n};\r\n\r\n// 리듀서\r\nfunction option(state: stateType = initialState, action: actionType) {\r\n    switch (action.type) {\r\n        case CLEAR_ADDED_OPTIONS:\r\n            return {\r\n                addedOptionList : []\r\n            };\r\n        case ADD_OPTION:\r\n            return {\r\n                addedOptionList : state.addedOptionList.concat({...action.payload})\r\n            };\r\n        case DEL_OPTION:\r\n            return {\r\n                addedOptionList : state.addedOptionList.filter(opt => opt.optionId !== action.payload)\r\n            };\r\n        default:\r\n            return state;\r\n  }\r\n}\r\n\r\nexport default option;","import React from 'react';\r\nimport {FaCheck} from 'react-icons/fa';\r\nimport {optionType} from '../utils/interfaces';\r\n\r\ninterface paramType {\r\n    itemId: string;\r\n    check?: boolean;\r\n    optId: string;\r\n}\r\n\r\ninterface Props {\r\n    option: optionType;\r\n    itemId: string;\r\n    onClickOption: (param: paramType)=>void;\r\n}\r\n\r\nfunction Option({option, itemId, onClickOption}: Props){\r\n    const onClick = ()=>{\r\n        onClickOption({\r\n            optId: option.optionId,\r\n            check: option.check,\r\n            itemId\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={`option-box ${option.check ? 'active' : ''}`} onClick={onClick}>\r\n            <div className='head'>\r\n                {option.check ?\r\n                    <FaCheck size='25' color='#00a800'></FaCheck> :\r\n                    <FaCheck size='25' color='#bcbcbc'></FaCheck>\r\n                }\r\n                <div className='name'>{option.optionName}</div>\r\n            </div>\r\n            {option.optionId + '' === '0' ? null : <div>+{option.optionPrice.toLocaleString()}원</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Option;","import React from 'react';\r\nimport Option from './Option';\r\nimport {optionType, categoryItemType} from '../utils/interfaces';\r\n\r\ninterface paramType {\r\n    itemId: string;\r\n    check?: boolean;\r\n    optId: string;\r\n}\r\n\r\ninterface Props {\r\n    optionList: optionType[];\r\n    itemId: string;\r\n    onClickOption: (param: paramType)=>void;\r\n}\r\n\r\nfunction OptionList({optionList, itemId, onClickOption}: Props){\r\n    return (\r\n        <div className='optionList-box'>\r\n            <div className='desc'>*20개까지 선택할 수 있습니다.</div>\r\n            <div className='wrapper'>\r\n                {optionList.map(opt => <Option key={opt.optionId} itemId={itemId} option={opt} onClickOption={onClickOption}></Option>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OptionList;","import React, { useEffect, useState } from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { RootState } from '../modules/index';\r\nimport { categoryItemType, optionType } from '../utils/interfaces';\r\nimport { addOption, deleteOption, clearAddedOptions } from '../modules/option';\r\nimport { checkOption, uncheckOption, uncheckOptionAll } from '../modules/itemList';\r\nimport OptionList from '../components/OptionList';\r\n\r\ninterface paramType {\r\n    itemId: string;\r\n    check?: boolean;\r\n    optId: string;\r\n}\r\n\r\ninterface Props {\r\n    item: categoryItemType;\r\n}\r\n\r\n\r\nfunction OptionListContainer({item}: Props) {\r\n    const cateList = useSelector((state: RootState) => state.topMenu.cateList);\r\n    const dispatch = useDispatch();\r\n\r\n    const onClickOption = ({itemId, check, optId}: paramType)=>{\r\n        if(optId + '' === '0'){\r\n            dispatch(clearAddedOptions());\r\n            dispatch(uncheckOptionAll());\r\n\r\n        }else{\r\n            if(check){\r\n                dispatch(uncheckOption(optId));\r\n                dispatch(deleteOption(optId));\r\n            }else{\r\n                let option: optionType | null = null; \r\n                for(var i=0; i< cateList.length; i++){\r\n                    const cate = cateList[i];\r\n                    const item = cate.categoryItems.filter(item => item.itemId === itemId);\r\n                    if(item.length > 0){\r\n                        const tmpOpt = item[0].itemOptions.filter(opt => opt.optionId === optId);\r\n                        if(tmpOpt.length > 0){\r\n                            option = tmpOpt[0];\r\n                        }\r\n                    }\r\n                } \r\n                dispatch(addOption(option!));\r\n                dispatch(checkOption(optId));\r\n            } \r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <OptionList optionList={item.itemOptions} itemId={item.itemId} onClickOption={onClickOption}></OptionList>\r\n    );\r\n}\r\n\r\nexport default OptionListContainer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {optionType, categoryItemType} from '../utils/interfaces';\r\n\r\ninterface paramType {\r\n    item: categoryItemType;\r\n    addedOptionList: optionType[];\r\n}\r\n\r\ninterface Props {\r\n    item: categoryItemType;\r\n    addedOptionList: optionType[];\r\n    onPutItem: (param: paramType)=>void;\r\n}\r\n\r\nfunction AddedList({item, addedOptionList, onPutItem}: Props){\r\n    const [price, setPrice] =  useState(0);\r\n\r\n    const onClickPutCart = ()=>{\r\n        onPutItem({item, addedOptionList});\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // 추가된 옵션 합계\r\n        const sum = addedOptionList.reduce((acc, now)=> acc + now.optionPrice, 0);\r\n        setPrice(sum + item.itemPrice);\r\n    }, [addedOptionList]);\r\n\r\n    return (\r\n        <div className='addedList-box'>\r\n            <div className='list-wrapper'>\r\n                <div className='title'>{item.itemName}</div>\r\n                <div className='item' style={{color : 'black'}}>\r\n                    <div>기본가격</div>\r\n                    <div>{item.itemPrice.toLocaleString()}원</div>\r\n                </div>\r\n                <div className='opt-box'>\r\n                    {addedOptionList.map(opt => \r\n                        (<div key={opt.optionId} className='item'>\r\n                            <div>+{opt.optionName}</div>\r\n                            <div>{opt.optionPrice.toLocaleString()}원</div>\r\n                        </div>)\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className='footer'>\r\n                <div className='info'>\r\n                    <div className='txt'>합계</div>\r\n                    <div className='total'>{price.toLocaleString()}원</div>\r\n                </div>\r\n                <div className='cart-btn' onClick={onClickPutCart}>장바구니 담기</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddedList;","import React, { useContext } from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { RootState } from '../modules/index';\r\nimport { addItem } from '../modules/cart';\r\nimport { setSelectedItem } from '../modules/topMenu';\r\nimport AddedList from '../components/AddedList';\r\nimport { categoryItemType, optionType } from '../utils/interfaces';\r\nimport { pageContext } from '../App';\r\nimport { clearAddedOptions } from '../modules/option';\r\n\r\ninterface paramType {\r\n    item: categoryItemType;\r\n    addedOptionList: optionType[];\r\n}\r\n\r\nfunction AddedListContainer() {\r\n    const ctx = useContext(pageContext);\r\n    const state = useSelector((state: RootState) => state);\r\n    const [addedOptionList, item] = [state.option.addedOptionList, state.itemList!.selectedItem];\r\n    const dispatch = useDispatch();\r\n\r\n    const onPutItem = ({item, addedOptionList : options}: paramType)=>{\r\n        const cartItem = {\r\n            itemId : item.itemId,\r\n            itemName : item.itemName,\r\n            itemPrice : item.itemPrice,\r\n            optionList : options,\r\n            amount : 1\r\n        }\r\n        dispatch(setSelectedItem(item.itemId));\r\n        dispatch(addItem(cartItem));\r\n        dispatch(clearAddedOptions());\r\n        ctx?.toggleMessage('상품이 장바구니에 추가되었습니다.');\r\n        ctx?.togglePage('main'); // 메인화면 show\r\n    }\r\n\r\n    return (\r\n        <AddedList item={item!} addedOptionList={addedOptionList} onPutItem={onPutItem}></AddedList>\r\n    );\r\n}\r\n\r\nexport default AddedListContainer;\r\n","import React, {useContext} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {RootState} from '../modules/index';\r\nimport {setSelectedItem} from '../modules/itemList';\r\nimport {clearAddedOptions} from '../modules/option';\r\nimport {uncheckOptionAll} from '../modules/itemList';\r\nimport {pageContext} from '../App';\r\nimport OptionListContainer from '../containers/OptionListContainer';\r\nimport AddedListContainer from '../containers/AddedListContainer';\r\n\r\nfunction OptionPage() {\r\n  const ctx = useContext(pageContext);\r\n  const item = useSelector((state: RootState) => state.itemList!.selectedItem);\r\n  const dispatch = useDispatch();\r\n\r\n  const onClosePage = ()=>{\r\n    dispatch(clearAddedOptions());\r\n    ctx!.togglePage('main');\r\n  }\r\n\r\n  return (\r\n    <div className=\"option-page\">\r\n      <div className='wrapper'>\r\n        <div className='header'>\r\n          <div className='title'>{item?.itemName}</div>\r\n          <div className='close' onClick={onClosePage}>X 닫기</div>\r\n        </div>\r\n        <div className='content-wrapper'>\r\n          <OptionListContainer item={item!}></OptionListContainer>  \r\n          <AddedListContainer></AddedListContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OptionPage;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { pageContext } from '../App';\r\n\r\ninterface Props {\r\n    msg: string;\r\n}\r\n\r\nfunction MessageBox({msg}: Props){\r\n    const ctx = useContext(pageContext);\r\n\r\n    useEffect(()=>{\r\n        setTimeout(()=> ctx?.toggleMessage(), 3500);\r\n    }, []);\r\n\r\n    return (\r\n        <div className='message-box'>\r\n            {msg}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessageBox;","const UT = {\r\n    request : async (api: string)=>{\r\n        try {\r\n            const result = await fetch(api);\r\n            if(result.status !== 200){\r\n                throw new Error('문제가 발생하였습니다.');\r\n            }\r\n            return result.json();\r\n        }catch(ex){\r\n            console.error(ex);\r\n        }\r\n    }\r\n}\r\n\r\nexport default UT;","import React, { createContext, useEffect, useState } from 'react';\r\nimport './Styles.css';\r\nimport MainPage from './pages/MainPage';\r\nimport OptionPage from './pages/OptionPage';\r\nimport MessageBox from './components/MessageBox';\r\nimport {setCategoryList} from './modules/topMenu';\r\nimport { useDispatch } from 'react-redux';\r\nimport UT from './utils/util';\r\n\r\n\r\ninterface contextType {\r\n  togglePage: (page: 'main' | 'option')=>void;\r\n  toggleMessage: (msg?: string)=>void;\r\n}\r\n\r\nexport const pageContext = createContext<contextType | null>(null);\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const [showMain, setShowMain] = useState(true);\r\n  const [msgInfo, setMsgInfo] = useState({show : false, msg : ''});\r\n\r\n  const togglePage = (page: string)=>{\r\n    setShowMain(page === 'main' ? true : false);\r\n  }\r\n  \r\n  const toggleMessage = (msg?: string)=>{\r\n    setMsgInfo({\r\n      show : msg ? true : false,\r\n      msg : msg || ''\r\n    });\r\n  }\r\n\r\n  const getCategoryList = async ()=>{\r\n    // 카테고리 목록 조회\r\n    const result = await UT.request('mock.json');\r\n    dispatch(setCategoryList(result.categories));\r\n  }\r\n\r\n  useEffect(()=>{\r\n      getCategoryList();\r\n  }, []);\r\n\r\n  return (\r\n    <pageContext.Provider value={{togglePage, toggleMessage}}>\r\n      <div className=\"App\">\r\n        {showMain ? \r\n          <MainPage/> :\r\n          <OptionPage/>\r\n        }\r\n        {msgInfo.show ? <MessageBox msg={msgInfo.msg}></MessageBox> : null}\r\n      </div>\r\n    </pageContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from 'redux';\r\nimport topMenu from './topMenu';\r\nimport itemList from './itemList';\r\nimport cart from './cart';\r\nimport option from './option';\r\n\r\n// 쪼개진 리듀서들을 하나로 합친다\r\nconst rootReducer = combineReducers({\r\n    topMenu,\r\n    itemList,\r\n    cart,\r\n    option\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from 'react-redux';\r\nimport rootReducer from './modules';\r\nimport { createStore } from 'redux';\r\n\r\n// 스토어생성\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}